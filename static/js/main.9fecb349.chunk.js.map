{"version":3,"sources":["utils/RandomUtil.js","components/RainCanvas.js","components/Typing.js","constants.js","pages/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["RandomUtil","randomUntil","max","isDecimal","result","Math","random","floor","randomFromTo","from","to","Rain","screen","isFirstLoad","maxLength","speed","update","x","directionX","y","directionY","draw","context","directionTo","length","beginPath","moveTo","lineTo","stroke","isCollide","obstacle","document","getElementsByClassName","children","offsetLeft","offsetWidth","offsetTop","offsetHeight","width","height","this","RainCanvas","props","getWindowSize","state","rainMax","window","innerWidth","innerHeight","setState","initializeRain","rains","i","push","animate","getContext","strokeStyle","clearRect","forEach","r","splice","componentDidMount","addEventListener","setInterval","render","component","className","React","Component","Typing","setString","then","stringIndex","strings","shownString","typeString","falseStrings","falseCount","maxFalseCount","string","newChar","isFalse","falseString","isComplete","setTimeout","substr","interval","fontSize","textAlign","Greetings","styled","div","stringCollections","falseStringCollections","greetings","country","true","false","MainPage","introduction","name","Box","Footer","trueGreetings","map","g","falseGreetings","show","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9fecb349.chunk.js","sourcesContent":["class RandomUtil {\r\n\r\n    /**\r\n     * \r\n     * @param Number max \r\n     * @param boolean isDecimal\r\n     * \r\n     * @return If isDecimal true, then return decimal random number until max (exclusive). Otherwise, return integer.\r\n     */\r\n    static randomUntil = (max, isDecimal = false) => {\r\n        let result = Math.random() * max;\r\n        return isDecimal ? result : Math.floor(Math.random() * max);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param Number from \r\n     * @param Number to \r\n     * @param boolean isDecimal \r\n     * \r\n     * @return If isDecimal true, then return decimal random number from param from until param to (exclusive). Otherwise, return integer.\r\n     */\r\n    static randomFromTo = (from, to, isDecimal = false) => {\r\n        let result = Math.random() * (to - from) + from;\r\n        return isDecimal ? result : Math.floor(result);\r\n    }\r\n\r\n}\r\n\r\nexport default RandomUtil;","import React from 'react';\r\nimport RandomUtil from './../utils/RandomUtil';\r\n\r\nclass Rain {\r\n    maxLength = 10;\r\n    speed = RandomUtil.randomFromTo(3, 8);\r\n\r\n    constructor(screen, isFirstLoad) {\r\n        this.directionX = 0;\r\n        \r\n        this.x = RandomUtil.randomUntil(screen.width);\r\n        this.y = isFirstLoad || false ? RandomUtil.randomUntil(screen.height / 2) : 0;\r\n        this.length = RandomUtil.randomFromTo(1, this.maxLength);\r\n        this.directionX = RandomUtil.randomFromTo(-1, 1, true) / 2;\r\n        this.directionY = 1;\r\n    }\r\n\r\n    update = () => {\r\n        this.x += this.directionX * this.speed;\r\n        this.y += this.directionY * this.speed;\r\n    }\r\n\r\n    draw = (context) => {\r\n        let directionTo = {\r\n            x: this.x + (this.directionX * this.length),\r\n            y: this.y + (this.directionY * this.length)\r\n        };\r\n\r\n        context.beginPath();\r\n        context.moveTo(this.x ,this.y);\r\n        context.lineTo(directionTo.x, directionTo.y);\r\n        context.stroke();\r\n\r\n        this.update();\r\n    }\r\n\r\n    isCollide = (screen) => {\r\n        let obstacle = document.getElementsByClassName('obstacle')[0];\r\n        if(typeof(obstacle) !== 'undefined' && obstacle.children.length > 0) {\r\n            if(this.x + (this.directionX * this.speed) >= obstacle.offsetLeft \r\n                && this.x + (this.directionX * this.speed) <= obstacle.offsetLeft + obstacle.offsetWidth\r\n                && this.y + (this.directionY * this.speed) >= obstacle.offsetTop\r\n                && this.y + (this.directionY * this.speed) <= obstacle.offsetTop + obstacle.offsetHeight) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return this.x < 0 || this.x > screen.width || this.y > screen.height;\r\n    }\r\n}\r\n\r\nclass RainCanvas extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            screen: {\r\n                width: 0,\r\n                height: 0\r\n            },\r\n            rains: [],\r\n            rainMax: 50\r\n        }\r\n    }\r\n\r\n    getWindowSize = () => {\r\n        let { screen, rainMax } = this.state;\r\n\r\n        screen.width = window.innerWidth;\r\n        screen.height = window.innerHeight;\r\n        rainMax = Math.floor(screen.width * 0.5);\r\n\r\n        this.setState({\r\n            screen,\r\n            rainMax\r\n        })\r\n    }\r\n\r\n    initializeRain = () => {\r\n        const { rainMax, screen } = this.state;\r\n        let { rains } = this.state;\r\n        for(let i=0;i<rainMax;i++) {\r\n            rains.push(new Rain(screen, true));\r\n        }\r\n\r\n        this.setState({\r\n            rains\r\n        });\r\n    }\r\n\r\n    animate = () => {\r\n        const { screen } = this.state;\r\n        let canvas = document.getElementsByClassName('rain-canvas')[0];\r\n        let context = canvas.getContext('2d');\r\n        context.strokeStyle = '#FFFFFF';\r\n        context.clearRect(0, 0, screen.width, screen.height);\r\n        let { rains } = this.state;\r\n        \r\n        if(rains.length === 0) this.initializeRain();\r\n\r\n        rains.forEach((r, i) => {\r\n            if(r.isCollide(screen)) {\r\n                rains.splice(i, 1);\r\n                rains.push(new Rain(screen));\r\n                this.setState({\r\n                    rains\r\n                });\r\n            }\r\n            r.draw(context);\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.addEventListener('resize', this.getWindowSize);\r\n        this.getWindowSize();\r\n        setInterval(this.animate, 1000 / 120);\r\n    }\r\n\r\n    render = () => {\r\n        const { screen } = this.state;\r\n        const { component } = this.props;\r\n\r\n        return (\r\n            <div className=\"flex-center\">\r\n                <canvas width={screen.width} height={screen.height} className=\"rain-canvas\"></canvas>\r\n                <div className=\"obstacle\">\r\n                    { component }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default RainCanvas;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport RandomUtil from './../utils/RandomUtil';\r\n\r\nclass Typing extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            strings: props.stringCollections || [],\r\n            falseStrings: props.falseStringCollections || [],\r\n            stringIndex: -1,\r\n            shownString: ' ',\r\n            falseCount: 0,\r\n            maxFalseCount: 2,\r\n            isComplete: false\r\n        };\r\n        this.interval = props.interval || 1500;\r\n    }\r\n\r\n    setString = (then) => {\r\n        let { stringIndex, strings } = this.state;\r\n        ++stringIndex;\r\n        stringIndex %= strings.length;\r\n        this.setState({\r\n            stringIndex,\r\n            shownString: ''\r\n        }, then);\r\n    }\r\n\r\n    typeString = () => {\r\n        let { shownString, stringIndex, strings, falseStrings, falseCount, maxFalseCount } = this.state;\r\n        let string = strings[stringIndex]\r\n        let newChar = string[shownString.length];\r\n\r\n        let isFalse = RandomUtil.randomUntil(2) === 0 && falseCount !== maxFalseCount && shownString.length !== string.length - 1;\r\n        if(isFalse) {\r\n            let falseString = falseStrings[stringIndex];\r\n            let idx = RandomUtil.randomUntil(falseString.length - 1);\r\n            newChar = falseString[idx];\r\n            ++falseCount;\r\n        }\r\n        shownString += newChar;\r\n\r\n        this.setState({\r\n            shownString,\r\n            isComplete: shownString === string,\r\n            falseCount\r\n        }, () => {\r\n            const { shownString, strings, stringIndex } = this.state;\r\n            if(isFalse) {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        shownString: shownString.substr(0, shownString.length - 1),\r\n                        isComplete: false\r\n                    }, () => {\r\n                        setTimeout(this.typeString, this.interval / 2);\r\n                    });\r\n                }, this.interval / 2);\r\n            }\r\n            else {\r\n                if(shownString === strings[stringIndex]) {\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            shownString: '',\r\n                            isComplete: false\r\n                        }, () => {\r\n                            setTimeout(this.typeString, this.interval);\r\n                        });\r\n                    }, this.interval);\r\n                }\r\n                else {\r\n                    setTimeout(this.typeString, this.interval);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { strings } = this.state;\r\n        if(typeof(strings) === typeof([]) && strings.length > 0) {\r\n            this.setString(() => {\r\n                this.typeString();\r\n            });\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const { shownString, isComplete } = this.state;\r\n        const { fontSize, textAlign } = this.props;\r\n\r\n        const Greetings = styled.div`\r\n            text-transform: capitalize;\r\n            font-size: ${fontSize || 16}px;\r\n            text-align: ${textAlign || 'left'};\r\n            width: 100%;\r\n        `;\r\n\r\n        return (\r\n            <Greetings className=\"text-cursor\"><span className={\"greeting-text\" + (isComplete ? ' highlighted' : '')}>{ shownString }</span>&zwnj;</Greetings>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Typing;","export let greetings = [\r\n    {\r\n        country: 'Indonesia',\r\n        true: 'halo',\r\n        false: 'bcdefgijkmnpqrstuvwxyz'\r\n    }\r\n];","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport RainCanvas from './../components/RainCanvas';\r\nimport Typing from './../components/Typing';\r\nimport { greetings } from './../constants';\r\n\r\nclass MainPage extends React.Component {\r\n\r\n    introduction = (name) => {\r\n        const Box = styled.div `\r\n            border: 1px solid black;\r\n            padding: 5px 10px;\r\n            box-shadow: 5px 5px 10px #34495e;\r\n            width: 75vw;\r\n            height: 50vh;\r\n            text-align: center;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            flex-direction: column;\r\n        `;\r\n\r\n        const Footer = styled.div `\r\n            position: absolute;\r\n            bottom: 0;\r\n            left: 0;\r\n            display: flex;\r\n            justify-content: center;\r\n            padding: 20px;\r\n            width: 100vw;\r\n            color: black;\r\n        `;\r\n\r\n        const trueGreetings = greetings.map(g => g.true + \",\");\r\n        const falseGreetings = greetings.map(g => g.false);\r\n\r\n        return (\r\n            <>\r\n                <Box>\r\n                    <Typing stringCollections={ trueGreetings }\r\n                            falseStringCollections={ falseGreetings }\r\n                            fontSize={30}\r\n                            textAlign=\"center\" />\r\n                    <p>My name is { name || 'Andy Lie' }</p>\r\n                </Box>\r\n                <Footer>\r\n                    &copy; Andy Lie\r\n                </Footer>\r\n            </>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        let show = this.introduction();\r\n\r\n        return (\r\n            <>\r\n                <RainCanvas component={ show } />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport './App.css';\r\nimport MainPage from './pages/MainPage';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<MainPage />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}