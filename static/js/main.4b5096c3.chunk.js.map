{"version":3,"sources":["utils/RandomUtil.js","components/RainCanvas.js","pages/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["RandomUtil","randomUntil","max","Math","floor","random","randomFromTo","from","to","Rain","screen","isFirstLoad","maxLength","speed","update","x","directionX","y","directionY","draw","context","directionTo","length","beginPath","moveTo","lineTo","stroke","isCollide","obstacle","document","getElementsByClassName","children","offsetLeft","offsetWidth","offsetTop","offsetHeight","width","height","this","RainCanvas","props","getWindowSize","state","rainMax","window","innerWidth","innerHeight","setState","initializeRain","rains","i","push","animate","getContext","strokeStyle","clearRect","forEach","r","splice","componentDidMount","addEventListener","setInterval","render","component","className","React","Component","MainPage","introduction","name","Box","styled","div","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4b5096c3.chunk.js","sourcesContent":["class RandomUtil {\r\n\r\n    static randomUntil = (max) => {\r\n        return Math.floor(Math.random() * max);\r\n    }\r\n\r\n    static randomFromTo = (from, to) => {\r\n        return Math.floor(Math.random() * (to - from)) + from;\r\n    }\r\n\r\n}\r\n\r\nexport default RandomUtil;","import React from 'react';\r\nimport RandomUtil from './../utils/RandomUtil';\r\n\r\nclass Rain {\r\n    maxLength = 10;\r\n    speed = RandomUtil.randomFromTo(3, 8);\r\n\r\n    constructor(screen, isFirstLoad) {\r\n        this.directionX = 0;\r\n        \r\n        this.x = RandomUtil.randomUntil(screen.width);\r\n        this.y = isFirstLoad || false ? RandomUtil.randomUntil(screen.height / 2) : 0;\r\n        this.length = RandomUtil.randomFromTo(1, this.maxLength);\r\n        this.directionX = RandomUtil.randomFromTo(-1, 1) / 2;\r\n        this.directionY = 1;\r\n    }\r\n\r\n    update = () => {\r\n        this.x += this.directionX * this.speed;\r\n        this.y += this.directionY * this.speed;\r\n    }\r\n\r\n    draw = (context) => {\r\n        let directionTo = {\r\n            x: this.x + (this.directionX * this.length),\r\n            y: this.y + (this.directionY * this.length)\r\n        };\r\n\r\n        context.beginPath();\r\n        context.moveTo(this.x ,this.y);\r\n        context.lineTo(directionTo.x, directionTo.y);\r\n        context.stroke();\r\n\r\n        this.update();\r\n    }\r\n\r\n    isCollide = (screen) => {\r\n        let obstacle = document.getElementsByClassName('obstacle')[0];\r\n        if(typeof(obstacle) !== 'undefined' && obstacle.children.length > 0) {\r\n            if(this.x >= obstacle.offsetLeft \r\n                && this.x <= obstacle.offsetLeft + obstacle.offsetWidth\r\n                && this.y >= obstacle.offsetTop\r\n                && this.y <= obstacle.offsetTop + obstacle.offsetHeight) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return this.x < 0 || this.x > screen.width || this.y > screen.height;\r\n    }\r\n}\r\n\r\nclass RainCanvas extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            screen: {\r\n                width: 0,\r\n                height: 0\r\n            },\r\n            rains: [],\r\n            rainMax: 50\r\n        }\r\n    }\r\n\r\n    getWindowSize = () => {\r\n        let { screen, rainMax } = this.state;\r\n\r\n        screen.width = window.innerWidth;\r\n        screen.height = window.innerHeight;\r\n        rainMax = Math.floor(screen.width * 0.5);\r\n\r\n        this.setState({\r\n            screen,\r\n            rainMax\r\n        })\r\n    }\r\n\r\n    initializeRain = () => {\r\n        const { rainMax, screen } = this.state;\r\n        let { rains } = this.state;\r\n        for(let i=0;i<rainMax;i++) {\r\n            rains.push(new Rain(screen, true));\r\n        }\r\n\r\n        this.setState({\r\n            rains\r\n        });\r\n    }\r\n\r\n    animate = () => {\r\n        const { screen } = this.state;\r\n        let canvas = document.getElementsByClassName('rain-canvas')[0];\r\n        let context = canvas.getContext('2d');\r\n        context.strokeStyle = '#FFFFFF';\r\n        context.clearRect(0, 0, screen.width, screen.height);\r\n        let { rains } = this.state;\r\n        \r\n        if(rains.length === 0) this.initializeRain();\r\n\r\n        rains.forEach((r, i) => {\r\n            r.draw(context);\r\n            if(r.isCollide(screen)) {\r\n                rains.splice(i, 1);\r\n                rains.push(new Rain(screen));\r\n                this.setState({\r\n                    rains\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.addEventListener('resize', this.getWindowSize);\r\n        this.getWindowSize();\r\n        setInterval(this.animate, 1000 / 120);\r\n    }\r\n\r\n    render = () => {\r\n        const { screen } = this.state;\r\n        const { component } = this.props;\r\n\r\n        return (\r\n            <div className=\"flex-center\">\r\n                <canvas width={screen.width} height={screen.height} className=\"rain-canvas\"></canvas>\r\n                <div className=\"obstacle\">\r\n                    { component }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default RainCanvas;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport RainCanvas from './../components/RainCanvas';\r\n\r\nclass MainPage extends React.Component {\r\n\r\n    introduction = (name) => {\r\n        const Box = styled.div `\r\n            border: 1px solid black;\r\n            padding: 5px;\r\n        `;\r\n\r\n        return (\r\n            <Box>\r\n                <p>Hi, my name is {name || 'Andy Lie'}</p>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <RainCanvas component={this.introduction()} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\nimport './App.css';\nimport MainPage from './pages/MainPage';\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<MainPage />\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}